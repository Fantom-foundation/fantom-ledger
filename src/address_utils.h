#ifndef FANTOM_LEDGER_ADDRESS_UTILS_H
#define FANTOM_LEDGER_ADDRESS_UTILS_H

#include <stdint.h>
#include "cx.h"

// MIN_ADDRESS_STR_BUFFER_LEN defines the minimal address buffer size needed
// to store a human readable address produced by the format function.
// At the same time it's actually the longest address string generated by the function.
// We need 2 letters for "0x" followed by 40 letters for the address hex + terminator.
#define MIN_ADDRESS_STR_BUFFER_SIZE 43

// deriveAddress implements address derivation for given BIP44 path.
size_t deriveAddress(bip44_path_t *path, cx_sha3_t *sha3Context, uint8_t *out, size_t outSize);

// getRawAddress implements wallet address calculation for given public key.
size_t getRawAddress(cx_ecfp_public_key_t *publicKey, cx_sha3_t *sha3Context, uint8_t *out, size_t outSize);

// addressFormatStr implements formatting of a raw address into a human readable textual form.
void addressFormatStr(uint8_t *address, cx_sha3_t *sha3Context, char *out, size_t outSize);

#endif //FANTOM_LEDGER_ADDRESS_UTILS_H
